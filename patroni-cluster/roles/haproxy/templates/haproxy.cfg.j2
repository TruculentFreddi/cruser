#jinja2: lstrip_blocks: "True"
global
	log /dev/log	local0
	log /dev/log	local1 notice
	chroot /var/lib/haproxy
	stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
	stats timeout 30s
	user haproxy
	group haproxy
	daemon

	# Default SSL material locations
	ca-base /etc/ssl/certs
	crt-base /etc/ssl/private

	# See: https://ssl-config.mozilla.org/#server=haproxy&server-version=2.0.3&config=intermediate
        ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
        ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
        ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets

defaults
	log	global
	mode	tcp
	option	httplog
	option	dontlognull
    timeout connect 4s
    timeout client  30m
    timeout server  30m
	timeout check 5s
	retries 2
	errorfile 400 /etc/haproxy/errors/400.http
	errorfile 403 /etc/haproxy/errors/403.http
	errorfile 408 /etc/haproxy/errors/408.http
	errorfile 500 /etc/haproxy/errors/500.http
	errorfile 502 /etc/haproxy/errors/502.http
	errorfile 503 /etc/haproxy/errors/503.http
	errorfile 504 /etc/haproxy/errors/504.http


listen pg-leader
	bind *:5432
	mode tcp
	option httpchk OPTIONS /master
	http-check expect status 200
	default-server inter 3s fall 3 rise 2 on-marked-down shutdown-sessions
	{% for host in groups['patroni'] %}
    server {{ hostvars[host]['ansible_host'] }} {{ hostvars[host]['ansible_default_ipv4']['address'] }}:5432 check port 8008
    {% endfor %}

listen pg-replica
    bind *:5433
    mode tcp
    option httpchk OPTIONS /replica
    http-check expect status 200
    default-server inter 3s fall 3 rise 2 on-marked-down shutdown-sessions

    {% for host in groups['patroni'] %}
    server {{ hostvars[host]['ansible_host'] }} {{ hostvars[host]['ansible_default_ipv4']['address'] }}:5432 check port 8008
    {% endfor %}

frontend stats
    bind *:1936
    mode http
    stats uri /
    stats show-legends
    no log

{% if inventory_hostname in groups['haproxy_master'] %}
resolvers consul
    {% for host in groups['haproxy_master'] %}
    nameserver consul {{ hostvars[host]['ansible_default_ipv4']['address'] }}:8600
    {% endfor %}
    accepted_payload_size 8192
    hold valid 5s
{% endif %}

{% if inventory_hostname in groups['haproxy_slaves'] %}
resolvers consul
    {% for host in groups['haproxy_master'] %}
    nameserver consul {{ hostvars[host]['ansible_default_ipv4']['address'] }}:8600
    {% endfor %}
    accepted_payload_size 8192
    hold valid 5s
{% endif %}